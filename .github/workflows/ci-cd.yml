name: CI/CD Pipeline

on:
  push:
    branches:
      - CICD
  pull_request:
    branches:
      - staging
    types: 
      - closed 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

      - name: Set Up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
          
      - name: Configure Docker to Authenticate with GCR
        run: gcloud auth configure-docker
        
      - name: Set Environment Variables
        id: secrets
        run: |
          echo "ENV_TYPE=$(gcloud secrets versions access latest --secret=ENV_TYPE)" >> $GITHUB_ENV
          echo "PROJECT_ID=$(gcloud secrets versions access latest --secret=PROJECT_ID)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          LOWERCASE_PROJECT_ID=$(echo ${{ env.PROJECT_ID }} | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=gcr.io/${LOWERCASE_PROJECT_ID}/my-app:${COMMIT_HASH}
          docker build -t ${IMAGE_NAME} .
          docker tag ${IMAGE_NAME} gcr.io/${LOWERCASE_PROJECT_ID}/my-app:latest
  
      - name: Push Docker Image to GCR
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          LOWERCASE_PROJECT_ID=$(echo ${{ env.PROJECT_ID }} | tr '[:upper:]' '[:lower:]')
          docker push gcr.io/${LOWERCASE_PROJECT_ID}/my-app:${COMMIT_HASH}
          docker push gcr.io/${LOWERCASE_PROJECT_ID}/my-app:latest

      - name: Deploy to Google Cloud Run
        run: |
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud run deploy my-app \
            --image gcr.io/${LOWERCASE_PROJECT_ID}/my-app:latest \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars "ENV=${{ env.ENV_TYPE }}" \
            --project ${{ env.PROJECT_ID }}
